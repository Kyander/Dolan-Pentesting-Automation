import os
import subprocess
import sys
import threading
import argparse


def gobusting(path, url, wordlist, output, args, name):
    command = "{} dir -u {} -w {} -o {}{} {}".format(path, url, wordlist, output, name, args)
    print(command)
    os.system(command)


class Gobuster():
    def __init__(self, hostsfile, wordlist, output, other_args):
        self.wordlist = wordlist
        self.output = output
        self.other_args = " ".join(other_args)
        self.file_path = hostsfile
        self.urls = self.create_list()
        self.go_path = self.check_depend()
        self.start_threads()

    def check_depend(self):
        result = subprocess.run(['which', 'gobuster'], stdout=subprocess.PIPE)
        out = result.stdout.decode("utf-8")
        if out == "":
            print("[!] You need gobuster in order to run this script...")
            sys.exit()
        else:
            pass
        return out.strip()

    def create_list(self):
        with open(self.file_path) as f:
            content = f.readlines()
        # you may also want to remove whitespace characters like `\n` at the end of each line
        content = [x.strip() for x in content]
        return content

    def start_threads(self):
        for url in self.urls:
            name = url.split("/")[2]

            thread = threading.Thread(target=gobusting, args=(self.go_path,url,self.wordlist,self.output, self.other_args, name))
            thread.start()




if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Mass Gobuster")
    parser.add_argument('-u', '--url', type=str, metavar='urls.txt', required=True,
                        help='File of urls to gobuster')
    parser.add_argument('-o', '--output', type=str, metavar='/home/user/output/', required=True,
                        help='Output Directory')
    parser.add_argument('-w','--wordlist', type=str, metavar='/home/wordlist/words.txt', required=True,
                        help='Wordlist to use on the gobuster for each url')
    parser.add_argument('args', nargs=argparse.REMAINDER)
    args, extra = parser.parse_known_args()


    other_args = sys.argv[7:]
    a = Gobuster(args.url,args.wordlist, args.output, other_args)


